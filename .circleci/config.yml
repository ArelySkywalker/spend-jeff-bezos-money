version: 2.1

references:
  deps_cache_key: &cache_key
    deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
  working_directory: &working_directory
    ~/app
  workspace: &attach_workspace
    attach_workspace:
      at: *working_directory
  netlify_environment: &netlify_environment
    NETLIFY_SITE_ID: spend-jeff-bezos-money.netlify.com

executors:
  node-executor:
    working_directory: *working_directory
    docker:
      - image: circleci/node:10.16.3

jobs:
  setup:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          key: *cache_key
      - run:
          name: Install dependencies.
          command: yarn install
      - save_cache:
          key: *cache_key
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: *working_directory
          paths:
            - .
  lint:
    executor: node-executor
    steps:
      - *attach_workspace
      - run:
          name: Running ESLint.
          command: yarn lint
  test:
    executor: node-executor
    steps:
      - *attach_workspace
      - run:
          name: Run test suite.
          command: yarn test
  build:
    executor: node-executor
    steps:
      - *attach_workspace
      - run:
          name: Building Application.
          command: yarn build
      - persist_to_workspace:
          root: *working_directory
          paths:
            - ./build 
  stage:
    executor: node-executor
    environment:
      <<: *netlify_environment
    steps:
      - *attach_workspace
      - run:
          name: Staging production-ready app to Netlify
          command: ./node_modules/.bin/netlify deploy --auth $NETLIFY_AUTH_TOKEN --site $NETLIFY_SITE_ID --dir ./build
  deploy:
    executor: node-executor
    environment:
      <<: *netlify_environment
    steps:
      - *attach_workspace
      - run:
          name: Deploying to Netlify
          command: ./node_modules/.bin/netlify deploy --auth $NETLIFY_AUTH_TOKEN --site $NETLIFY_SITE_ID --dir ./build --prod

workflows:
  version: 2.1
  app_build_and_deploy:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - test:
          requires:
            - setup
      - build:
          requires:
            - lint
            - test
      - stage:
          requires:
            - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
